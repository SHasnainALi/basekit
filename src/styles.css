/* ======================================================================
GLOBAL BASE — QUICK NOTES (v2025-09-19)
Usage: import this CSS before your components/utilities. Do not combine with another reset.
----------------------------------------------------------------------

ALERTS
- Fonts: system stack → if you enable Google Fonts, change --ff-sans and add <link>.
- Images: img { display:block }. If you need inline, use .img-inline { display:inline; vertical-align:middle; }.
- Forms: inherit font/color. Warning: some UI libs override them.
- Links: a { text-decoration:none }. Define <a> style in your base.
- Focus: :focus-visible active. Do not remove it without a visible alternative.
- Anchors: :target = 5ex. If header is tall/fixed, increase (e.g., 9ex).
- [hidden]: forces display:none and respects hidden="until-found". Do not mix with visibility/opacity.
- Reduced motion: shorten animations and disable parallax/spin/flash; create exceptions if critical.

WARNING (only if you are going to install)
- Tailwind: if using Preflight, avoid double reset or integrate it in @layer base.
- React/Next: if using Portals outside #root, review modal z-index.
- UI libraries: may enforce typography/inputs; review import order.

PERFORMANCE
- Do not load font preconnect/preload if Google Fonts is not enabled.
- Keep width/height on critical images to prevent CLS.
*/

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

/* Text */
p {
  text-wrap: pretty;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
  line-height: 1.25;
}
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* Medium */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
img,
video {
  height: auto;
}

/* Forms */
input,
button,
textarea,
select {
  font: inherit;
  color: inherit;
}

/* URL */
a {
  color: inherit;
  text-decoration: none;
}

/* Accesibility focus */
:focus-visible {
  outline: 2px solid Highlight;
  outline-offset: 2px;
}

/* Hidden */
[hidden]:not([hidden="until-found"]) {
  display: none !important;
}

/* Anchor Header Fix */
:target {
  scroll-margin-block: 5ex;
}

/* Root */
#root,
#__next {
  isolation: isolate;
}

/* Respect users with reduced motion */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  * {
    transition-duration: 0.12s !important; /* micro-transiciones */
    animation-duration: 0.12s !important; /* acorta animaciones */
    animation-iteration-count: 1 !important; /* sin bucles */
  }
  [data-parallax],
  .parallax,
  [data-anim*="spin"],
  .animate-spin,
  [data-anim*="flash"],
  .animate-flash {
    animation: none !important;
    transform: none !important; /* elimina parallax y giros */
  }
}

/* Respect users with reduced motion */
:root {
  --ff-sans: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans",
    "Liberation Sans", sans-serif;
  --ff-mono: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace;

  --fw-regular: 400;
  --fw-medium: 500;
  --fw-semibold: 600;
  --fw-bold: 700;

  --lh: 1.5;
}

/* === Global Base === */
body {
  font-family: var(--ff-sans);
  line-height: var(--lh);
}

/* Monospace code */
code,
kbd,
samp,
pre {
  font-family: var(--ff-mono);
}

/* Semantic control */
strong,
b {
  font-weight: var(--fw-bold);
}
em,
i {
  font-style: italic;
}

/* Heading hierarchy */
h1 {
  font-weight: var(--fw-bold);
}
h2 {
  font-weight: var(--fw-semibold);
}
h3 {
  font-weight: var(--fw-medium);
}
h4,
h5,
h6 {
  font-weight: var(--fw-regular);
}
